# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - install-packages:
        packages: zip unzip

    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
        package-dir: github.com/wmhopkins/grafeas

    # Get protobuf
    - script:
        name: get protobuf
        code: |
          mkdir -p /protobuf
          curl -o protobuf.zip -L https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip
          unzip -d /protobuf protobuf.zip
          mv protobuf.zip /protobuf

    # Gets the dependencies
    - script:
        name: go get
        code: |
          go version
          go get -u github.com/golang/protobuf/protoc-gen-go
          go get github.com/cockroachdb/cmux
          go get github.com/rs/cors
          go get google.golang.org/grpc
          go get github.com/grafeas/grafeas/samples/server/go-server/api/server/api
          go get gopkg.in/yaml.v2
          go get github.com/lib/pq

    # Build the project
    - script:
        name: make
        code: |
          echo "MAKE START"
          touch Timestamp.txt
          export PATH="/protobuf/bin:$PATH"
          make clean build
          echo "MAKE END"
          find $GOPATH -type f -newer Timestamp.txt
          echo "FILES END"

#    # Build the project
#    - script:
#        name: go build
#        code: |
#          go build ./...
#
#    # Test the project
#    - script:
#        name: go test
#        code: |
#          go test ./...
